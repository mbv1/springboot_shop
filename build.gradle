plugins {
	id 'org.springframework.boot' version '2.5.6'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
	id 'java'
}

group = 'com.shop'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'mysql:mysql-connector-java'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	implementation 'org.springframework.boot:spring-boot-devtools:2.5.6'
	implementation('org.springframework.boot:spring-boot-starter-security')
	//thymeleaf 레이아웃 적용
	implementation('nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect')
	//값 검증
	implementation('org.springframework.boot:spring-boot-starter-validation')
	//스프링 시큐리티 테스트
	implementation('org.springframework.security:spring-security-test')
	//인증된 사용자만 접근할 수 있는 기능
	implementation('org.thymeleaf.extras:thymeleaf-extras-springsecurity5')
	//서로 다른 클래스의 값을 필드의 이름과 자료형이 같으면 getter,setter를 통해 값을 복사해서 객체를 반환해줌
	implementation 'org.modelmapper:modelmapper:2.4.4'



	//querydsl
	implementation group: 'com.querydsl', name: 'querydsl-jpa', version: '4.4.0'
	implementation group: 'com.querydsl', name: 'querydsl-apt', version: '4.4.0'
	implementation group: 'com.querydsl', name: 'querydsl-core', version: '4.4.0'

	annotationProcessor group: 'com.querydsl', name: 'querydsl-apt', version: '4.4.0'
	annotationProcessor group: 'com.querydsl', name: 'querydsl-apt', version: '4.4.0', classifier: 'jpa'
	annotationProcessor("jakarta.persistence:jakarta.persistence-api")
	annotationProcessor("jakarta.annotation:jakarta.annotation-api")
}

test {
	useJUnitPlatform()
}

clean {
	delete file('src/main/generated') // 인텔리제이 Annotation processor 생성물 생성위치
}
